class Solution {

    // printing the node after unlinking -> inOrder
    // printing the node before linking -> PreOrder

    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        
        TreeNode curr = root;
        
        while(curr != null){
            if(curr.left == null){
                ans.add(curr.val);
                curr = curr.right;
            } else {
                TreeNode iop = curr.left;  // iop = inOrder precessor
                while(iop.right != null && iop.right != curr){
                    iop = iop.right;
                }
                
                if(iop.right == null){

                    ans.add(curr.val); // only change of code diff from inOrder
                    
                    iop.right = curr; // making the link
                    curr = curr.left;
                } else {
                    iop.right = null;  // breaking the link 
                    curr = curr.right;
                }
            }
        }
        
        return ans;
    }
}